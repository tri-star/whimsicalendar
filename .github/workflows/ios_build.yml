name: iOSBuild

on:
  push:
    branches:
      - deploy

jobs:
  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Flutter
        uses: actions/cache@v1
        id: flutter-cache
        env:
          FLUTTER_VERSION: 1.12.13-hotfix.9
        with:
          path: /Users/runner/hostedtoolcache/flutter/1.12.13-hotfix.9-stable
          key: ${{ runner.os }}-flutter-1.12.13-hotfix.9-stable

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.13+hotfix.9'

      - uses: actions/cache@v1
        id: pods-cache
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}

      - name: xcodebuild help
        run: xcodebuild -help

      - name: Flutter build
        run: |
          flutter pub get
          flutter build ios --release --no-codesign

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: install firebase-tools
        run: npm install -g firebase-tools

#      - name: Select Xcode version
#        run: cd ios && sudo xcode-select -s '/Applications/Xcode8.app'

      - name: Show Xcode version
        run: cd ios && xcodebuild -version

      - name: GoogleService-Info.plist
        run: |
          cd ios
          echo "${{ secrets.GOOGLE_SERVICES_IOS_PLIST }}" > Runner/GoogleService-Info.plist

      - name: debug directories
        run: |
          echo "hostedtoolcache"
          ls -l /Users/runner/hostedtoolcache || echo "not found"
          echo ""
          echo "ios"
          ls -l ./ios || echo "ios not found"
          echo ""
          echo "global node_modules"
          ls -l /usr/local/lib/node_modules || echo "not found"
          echo ""
          echo "flutter: $FLUTTER_HOME"
          ls -l $FLUTTER_HOME || echo "not found"
          echo ""
          echo "Pods"
          ls -l ios/Pods || echo "not found"

      - name: Adhoc
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          SLACK_URL: ${{ secrets.SLACK_URL }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FASTLANE_USERNAME: ${{ secrets.FASTLANE_USERNAME }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          cd ios
          fastlane adhoc --verbose
