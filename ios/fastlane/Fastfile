default_platform(:ios)

platform :ios do

    desc "Create certs"
    lane :create_certs do
        create_keychain(
            default_keychain: true,
            name: "mykeychain",
            password: ENV["KEYCHAIN_PASSWORD"],
            unlock: true,
            timeout: 180
        )
        match(
            type: "adhoc",
            keychain_name: "mykeychain",
            keychain_password: ENV["KEYCHAIN_PASSWORD"],
            git_branch: "create-certs",
            git_basic_authorization: Base64.strict_encode64("tri-star:#{ENV['GITHUB_TOKEN']}"),
            clone_branch_directly: true,
            output_path: "ios/fastlane",
            shallow_clone: true
        )
        slack(
            message: "Process complete.",
            slack_url: ENV["SLACK_URL"]
        )
    end

    desc "Archive AdHoc and send to Firebase"
    lane :adhoc do

        setup_ci(
          provider: "travis",
          force: true
        )

        MY_APP_ID = ENV["APPLE_APP_ID"]
        MY_PROFILE = "match AdHoc net.urban-theory.whimsicalendar 1589695224"
        MY_TEAM = ENV["APPLE_TEAM_ID"]

        match(
            readonly: true,
            type: "adhoc",
            app_identifier: MY_APP_ID,
            git_branch: "deploy",
            git_basic_authorization: Base64.strict_encode64("tri-star:#{ENV['GITHUB_TOKEN']}"),
            clone_branch_directly: true,
            shallow_clone: true
        )

        update_code_signing_settings(
            path: "Runner.xcodeproj",
            targets: "Runner",
            code_sign_identity: "iPhone Distribution",
            profile_name: MY_PROFILE,
            use_automatic_signing: false
        )

        settings_to_override = {
            :BUNDLE_IDENTIFIER => MY_APP_ID,
            :PROVISIONING_PROFILE_SPECIFIER => MY_PROFILE,
            :DEVELOPMENT_TEAM => MY_TEAM
        }
        build_app(workspace: "Runner.xcworkspace",
            export_method: "ad-hoc",
            scheme: "Runner",
            configuration: "Release",
            xcargs: settings_to_override,
            export_options: {
                uploadSymbols: false,
                provisioningProfiles: ENV["MATCH_PROVISIONING_PROFILE_MAPPING"]
            }
        )

        firebase_app_distribution(
            app: ENV["FIREBASE_APP_ID"],
            groups: "developer",
            release_notes: "test",
            firebase_cli_path: `which firebase`.strip(),
            firebase_cli_token: ENV["FIREBASE_TOKEN"],
            debug: true
        )
        slack(
            message: "ベータ版が配信されました\nhttps://appdistribution.firebase.dev/app_distro/projects",
            slack_url: ENV["SLACK_URL"]
        )
    end

end